{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Radium","keyframes","pulse","props","state","items","highlighted","i","push","shuffle","setTimeout","moveIt","next","this","setState","arr","selected","swap","length","Math","floor","random","class","map","item","toString","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAwEeA,GAhEIC,IAAOC,UAAUC,QAAO,S,kDAMzC,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,YAAa,GAGf,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACvB,EAAKH,MAAMC,MAAMG,KAAKD,GARP,OAWjB,EAAKH,MAAMC,MAAQ,EAAKI,QAAQ,EAAKL,MAAMC,OAE3CK,YAAW,kBAAM,EAAKC,OAAO,KAAI,KAbhB,E,0CAgBnB,SAAOC,GAAO,IAAD,OACXC,KAAKC,SAAL,2BAAkBD,KAAKT,OAAvB,IAA8BE,YAAaM,KAC3CF,YAAW,kBAAM,EAAKC,OAAOC,EAAO,KAAI,O,qBAG1C,SAAQG,GAGN,IAFA,IAAIC,EAAUC,EAENV,EAAIQ,EAAIG,OAAS,EAAGX,EAAI,EAAGA,IACjCS,EAAWG,KAAKC,MAAMD,KAAKE,UAAYd,EAAI,IAE3CU,EAAOF,EAAIR,GACXQ,EAAIR,GAAKQ,EAAIC,GACbD,EAAIC,GAAYC,EAGlB,OAAOF,I,oBAGT,WAAU,IAAD,OACP,OACE,cAAC,IAAD,UACA,qBAAKO,MAAM,YAAX,SACGT,KAAKT,MAAMC,MAAMkB,KAAI,SAAAC,GACpB,OAAG,EAAKpB,MAAME,cAAgBkB,EAE1B,qBAA2BF,MAAM,cAAjC,SAAgDE,GAAtCA,EAAKC,YAKjB,qBAA2BC,GAAIF,EAAKC,WAApC,SAAiDD,GAAvCA,EAAKC,uB,GAjDTE,IAAMC,YCATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c86655b0.chunk.js","sourcesContent":["import './App.css'\r\nimport React from 'react'\r\nimport { pulse } from 'react-animations'\r\nimport Radium, {StyleRoot} from 'radium'\r\n\r\nconst styles = {\r\n  pulse: {\r\n    animation: 'x 4s',\r\n    animationName: Radium.keyframes(pulse, 'pulse')\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      items: [],\r\n      highlighted: 0\r\n    }\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      this.state.items.push(i)\r\n    }\r\n\r\n    this.state.items = this.shuffle(this.state.items)\r\n\r\n    setTimeout(() => this.moveIt(1), 1000)\r\n  }\r\n\r\n  moveIt(next) {\r\n    this.setState({...this.state, highlighted: next})\r\n    setTimeout(() => this.moveIt(next + 1), 1000)\r\n  }\r\n\r\n  shuffle(arr) {\r\n    let selected, swap\r\n\r\n    for(let i = arr.length - 1; i > 0; i--) {\r\n      selected = Math.floor(Math.random() * (i + 1))\r\n\r\n      swap = arr[i]\r\n      arr[i] = arr[selected]\r\n      arr[selected] = swap\r\n    }\r\n\r\n    return arr\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyleRoot>\r\n      <div class=\"container\">\r\n        {this.state.items.map(item => {\r\n          if(this.state.highlighted === item) {\r\n            return (\r\n              <div key={item.toString()} class=\"highlighted\">{item}</div>\r\n              )\r\n          }\r\n\r\n            return (\r\n            <div key={item.toString()} id={item.toString()}>{item}</div>\r\n            )\r\n        }\r\n        )}\r\n      </div>\r\n      </StyleRoot>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}